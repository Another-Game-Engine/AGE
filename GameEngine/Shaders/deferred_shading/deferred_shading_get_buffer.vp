#version 330

layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 texCoord;
layout (location = 3) in vec3 tangent;

uniform mat4 projection_matrix;
uniform mat4 view_matrix;
uniform mat4 model_matrix;

uniform sampler2D diffuse_map;
uniform sampler2D normal_map;

out vec3 inter_normal;
out vec3 inter_tangent;
out vec2 vTexCoord;

void main()
{
	mat3 normal_matrix = transpose(inverse(mat3(model_matrix)));
	inter_normal = normalize(normal_matrix * normal);
	vTexCoord = texCoord;
	inter_tangent = normalize(normal_matrix * tangent);
	gl_Position = projection_matrix * view_matrix * model_matrix * vec4(position, 1);
}