#version 440

uniform global_state
{
	mat4 projection_matrix;
};

layout (location = 0) in vec4 position;
layout (location = 1) in vec4 normal;
layout (location = 2) in vec4 color;
layout (location = 3) in vec2 texCoord;

uniform mat4 view_matrix;
uniform mat4 model_matrix;

out vec4 inter_position;
out vec3 inter_normal;
out vec2 inter_texCoord;

void main()
{
	mat3 normal_matrix = transpose(inverse(mat3(view_matrix * model_matrix)));
	inter_position = view_matrix * model_matrix * position;
	inter_normal = vec3(normal);
	inter_texCoord = texCoord;
	gl_Position = projection_matrix * inter_position;
}