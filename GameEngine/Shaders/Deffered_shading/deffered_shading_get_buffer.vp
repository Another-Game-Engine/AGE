#version 330

uniform global_state
{
	mat4 projection_matrix;
	mat4 view_matrix;
};

layout (location = 0) in vec4 position;
layout (location = 1) in vec4 normal;
layout (location = 2) in vec2 texCoord;
layout (location = 3) in vec4 color;

uniform mat4 model_matrix;

out vec3 inter_normal;
out vec2 inter_texCoord;
out vec4 inter_position;
flat out vec3 eyes_pos;

void main()
{
	mat3 normal_matrix = transpose(inverse(mat3(model_matrix)));
	inter_normal = normalize(normal_matrix * vec3(normal));
	eyes_pos = -transpose(mat3(view_matrix)) * view_matrix[3].xyz;
	inter_texCoord = texCoord;
	inter_position = model_matrix * position;
	gl_Position = projection_matrix * view_matrix * inter_position;
}