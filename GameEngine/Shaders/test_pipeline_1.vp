#version 430

layout (location = 0) in vec4 position;
layout (location = 1) in vec4 normal;
layout (location = 2) in vec2 texCoord;
layout (location = 3) in vec4 tangent;
layout (location = 4) in vec4 blendWeight;
layout (location = 5) in vec4 blendIndice;

out vec4 interpolated_color;

uniform mat4 projection_matrix;
uniform mat4 view_matrix;
uniform mat4 model_matrix;
uniform mat4 bones[255];
uniform float skinned;

void main(void)
{
	vec4 newPosition = position;

	if (skinned != 0.0f)
	{
		newPosition = vec4(0.0f);

	//if (blendWeight.x > 0.0f)
	//	newPosition = vec4(1.0f);
	//		newPosition = (bones[int(blendIndice.x)] * position) * blendWeight.x;
	//	if (blendWeight.y > 0.0f)
	//		newPosition += (bones[int(blendIndice.y)] * position) * blendWeight.y;
	//	if (blendWeight.z > 0.0f)
	//		newPosition += (bones[int(blendIndice.z)] * position) * blendWeight.z;
	//	if (blendWeight.w > 0.0f)
	//		newPosition += (bones[int(blendIndice.w)] * position) * blendWeight.w;
	}

	mat4 model_view = view_matrix * model_matrix; 
	interpolated_color = normal;
	gl_Position = vec4(projection_matrix * model_view * newPosition);
}