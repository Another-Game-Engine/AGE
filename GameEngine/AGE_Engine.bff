// Core
//------------------------------------------------------------------------------
{
	.ProjectName		= 'AGEngine'
	.ProjectDestPath	= './TMP_SOLUTIONS/GameEngine/Engine/'
	.ProjectPath		= './GameEngine/GameEngine/Engine/'

	.VendorsPath        = './GameEngine/Vendors\'

	// Visual Studio Project Generation
	//--------------------------------------------------------------------------
	VCXProject( '$ProjectName$-proj' )
	{
		.ProjectOutput				= '$ProjectDestPath$\$ProjectName$.vcxproj'
		.ProjectInputPaths			= { '$ProjectPath$\'
		                               , '$VendorsPath$\imgui\'}
		.ProjectBasePath			= {'$ProjectPath$\'}

		.ProjectAllowedFileExtensions = { '.h' '.cpp' '.c' '.hh' '.hpp' }

		// Vendors
		.IncludeSearchPath               = '$ProjectPath$\'
										 + ';prout'
										 + ';$ProjectPath$\'
		                                 + ';$VendorsPath$\OpenGL\include\'
		                                 + ';$VendorsPath$\bullet\src\'
		                                 + ';$VendorsPath$\fmod\inc\'
		                                 + ';$VendorsPath$\minizip\include\'
		                                 + ';$VendorsPath$\zlib\include\'

		// Exclude Tests
	}

	// Unity
	//--------------------------------------------------------------------------
	{
		// Common options
		.UnityInputPath				= '$ProjectPath$\'
		.UnityOutputPath			= '$OutputBase$\Unity\$ProjectPath$\'
		.UnityInputExcludePath		= '$ProjectPath$\CoreTest\' // Exclude Tests

		// Windows
		Unity( '$ProjectName$-Unity-Windows' )
		{
			// No PCH
		}
	}

	//--------------------------------------------------------------------------
	ForEach( .Config in .ProjectConfigs )
	{
		Using( .Config )

		.IncludeSearchPath          + '$ProjectPath$\'
										 + ';$ProjectPath$\'
		                                 + ';$VendorsPath$\OpenGL\include\'
		                                 + ';$VendorsPath$\bullet\src\'
		                                 + ';$VendorsPath$\fmod\inc\'
		                                 + ';$VendorsPath$\minizip\include\'
		                                 + ';$VendorsPath$\zlib\include\'

	}

	// Windows (GameMSVC)
	//--------------------------------------------------------------------------
	ForEach( .Config in .Configs_Windows_MSVC )
	{
		Using( .Config )
		.OutputBase + '\$Platform$-$Config$'

		// Static Library
		Library( '$ProjectName$-Lib-$Platform$-$Config$' )
		{
			// Input (Unity)
			.CompilerInputUnity			= '$ProjectName$-Unity-Windows'

			// Output
			.CompilerOutputPath			= '$OutputBase$\$ProjectName$\'
 			.LibrarianOutput 			= '$OutputBase$\$ProjectName$\$ProjectName$.lib'
		}
		Alias( '$ProjectName$-$Platform$-$Config$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$Config$' }
	}

	// Aliases
	//--------------------------------------------------------------------------
	// Per-Config
	Alias( '$ProjectName$-Debug' )		{ .Targets = { '$ProjectName$-X64-Debug' } }
	Alias( '$ProjectName$-Profile' )	{ .Targets = { '$ProjectName$-X64-Profile' } }
	Alias( '$ProjectName$-Release' )	{ .Targets = { '$ProjectName$-X64-Release' } }

	// Per-Platform
	Alias( '$ProjectName$-X64' )		{ .Targets = { '$ProjectName$-X64-Debug', '$ProjectName$-X64-Release', '$ProjectName$-X64-Profile' } }

	// All
	Alias( '$ProjectName$' )
	{
		.Targets = { '$ProjectName$-Debug', '$ProjectName$-Profile', '$ProjectName$-Release' }
	}
}
