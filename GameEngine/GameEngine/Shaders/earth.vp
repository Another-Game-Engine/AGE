#version 330

layout (std140) uniform PerFrame
{
	mat4 projection;
	mat4 view;
	vec4 light;
	float time;
};

layout (std140) uniform PerModel
{
	mat4 model;
};

uniform	sampler2D fDayTexture;
uniform	sampler2D fNightTexture;
uniform	sampler2D fClouds;
uniform	sampler2D fBump;

layout (location = 0) in vec4 vPosition;
layout (location = 1) in vec4 vColor;
layout (location = 2) in vec4 vNormal;
layout (location = 3) in vec2 vTexCoord;

out vec4 gPosition;
out vec4 gColor;
out vec4 gNormal;
out vec2 gTexCoord;

void main(void)
{
  mat4 vectorSpace = transpose(inverse(view * model));

  gColor = vColor;
  gNormal = vec4(normalize((vectorSpace * vNormal).xyz), 0);
  gPosition = view * model * vPosition;
  gTexCoord = vTexCoord;
  gl_Position = vPosition;
}
