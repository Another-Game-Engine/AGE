// Core
//------------------------------------------------------------------------------
{
	.ProjectName		= 'AGEReader'
	.ProjectDestPath	= './TMP_SOLUTIONS/AGE_Reader/'
	.ProjectPath		= 'Reader'
	.EnginePath         = 'GameEngine/GameEngine/Engine'

	.VendorsPath        = 'GameEngine/Vendors'

	.CompilerIncludesPaths = ' /I"$ProjectPath$"'
						   + ' /I"$VendorsPath$"'
						   + ' /I"$EnginePath$"'
						   + ' /I"$VendorsPath$"\OpenGL\include\'
						   + ' /I"$VendorsPath$"\bullet\src\'
						   + ' /I"$VendorsPath$"\fmod\inc\'
						   + ' /I"$VendorsPath$"\minizip\include\'
						   + ' /I"$VendorsPath$"\zlib\include\'


	// Visual Studio Project Generation
	//--------------------------------------------------------------------------
	VCXProject( '$ProjectName$-proj' )
	{
		.ProjectOutput				= '$ProjectDestPath$\$ProjectName$.vcxproj'
		.ProjectInputPaths			= { '$ProjectPath$\' }
        .ProjectBasePath            = { '$ProjectPath$\'
                                        , '$VendorsPath$\' }

		.ProjectAllowedFileExtensions = { '.h' '.cpp' '.c' '.hh' '.hpp' }

		// Vendors
		.IncludeSearchPath               = '$ProjectPath$\'
										 + ';$EnginePath$\'
		                                 + ';$VendorsPath$\OpenGL\include\'
		                                 + ';$VendorsPath$\bullet\src\'
		                                 + ';$VendorsPath$\fmod\inc\'
		                                 + ';$VendorsPath$\minizip\include\'
		                                 + ';$VendorsPath$\zlib\include\'

		// Exclude Tests
	}

	// Unity
	//--------------------------------------------------------------------------

        .UnityNumFiles   = 3
        .UnityInputPath  = { '$ProjectDestPath$\' }

	{
		// Windows
		Unity( '$ProjectName$-Unity-Windows' )
		{
		    .UnityInputPath				= '$ProjectPath$\'
		    .UnityOutputPath			= '$OutputBase$\Unity\$ProjectPath$\'
		    //.UnityInputExcludePath		= '$ProjectPath$\CoreTest\' // Exclude Tests
		}
	}

	//--------------------------------------------------------------------------
	ForEach( .Config in .ProjectConfigs )
	{
		Using( .Config )

		.IncludeSearchPath          + '$ProjectPath$\'
										 + ';$ProjectPath$\'
		                                 + ';$VendorsPath$\OpenGL\include\'
		                                 + ';$VendorsPath$\bullet\src\'
		                                 + ';$VendorsPath$\fmod\inc\'
		                                 + ';$VendorsPath$\minizip\include\'
		                                 + ';$VendorsPath$\zlib\include\'

	}



	// Windows
	//--------------------------------------------------------------------------
	ForEach( .Config in .Configs_Windows_MSVC )
	{
		Using( .Config )
		.OutputBase + '\$Platform$-$Config$'

		// Static Library
		Library( '$ProjectName$-Lib-$Platform$-$Config$' )
		{
			// Input (Unity)
			.CompilerInputUnity			= '$ProjectName$-Unity-Windows'

			.CompilerInputPath          = '$ProjectPath$'

			.CompilerOptions            + ' $CompilerIncludesPaths$'

			// Output
			.CompilerOutputPath			= '$OutputBase$\$ProjectName$\'
 			.LibrarianOutput 			= '$OutputBase$\$ProjectName$\$ProjectName$.lib'
		}

		Executable( '$ProjectName$-Exe-$Platform$-$Config$' )
		{
			.Libraries					= { 'AGE_Utils-Lib-$Platform$-$Config$'
			                              , 'AGE_BFC-Lib-$Platform$-$Config$'
			                              , 'AGEReader-Lib-$Platform$-$Config$'
			                              , 'AGEngine-Lib-$Platform$-$Config$' }
			.LinkerOutput				= '$OutputBase$/Reader.exe'
			.LinkerOptions				+ ' /SUBSYSTEM:CONSOLE'
										+ ' kernel32.lib'
										+ ' Ws2_32.lib'
										+ ' LIBCMT.LIB'
										+ ' User32.lib'
		}
		Alias( '$ProjectName$-$Platform$-$Config$' ) { .Targets = '$ProjectName$-Exe-$Platform$-$Config$' }

	}

	// Aliases
	//--------------------------------------------------------------------------
	// Per-Config
	Alias( '$ProjectName$-Debug' )		{ .Targets = { '$ProjectName$-X64-Debug' } }
	Alias( '$ProjectName$-Profile' )	{ .Targets = { '$ProjectName$-X64-Profile' } }
	Alias( '$ProjectName$-Release' )	{ .Targets = { '$ProjectName$-X64-Release' } }

	// Per-Platform
	Alias( '$ProjectName$-X64' )		{ .Targets = { '$ProjectName$-X64-Debug', '$ProjectName$-X64-Release', '$ProjectName$-X64-Profile' } }

	// All
	Alias( '$ProjectName$' )
	{
		.Targets = { '$ProjectName$-Debug', '$ProjectName$-Profile', '$ProjectName$-Release' }
	}
}
