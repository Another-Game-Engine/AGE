#version 430 core
//#extension GL_ARB_compute_shader : enable
//#extension GL_ARB_shader_storage_buffer_object : enable

layout(std430, binding = 4) buffer Pos
{
	vec4 Positions[ ];
};

layout(std430, binding = 5) buffer Vel
{
	vec4 Velocities[ ];
};

layout(std430, binding = 6) buffer Col
{
	vec4 Colors[ ];
};

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

uniform float fTime;

const vec3 G = vec3(0.0f, -98f, 0.0f);

void main()
{
	uint gid = gl_GlobalInvocationID.x;
	vec3 p = Positions[gid].xyz;
	vec3 v = Velocities[gid].xyz;
	vec3 pp = p + v;
	vec3 vp = v + G * fTime;



	Positions[gid].xyz = pp;
	Velocities[gid].xyz = vp;
}
