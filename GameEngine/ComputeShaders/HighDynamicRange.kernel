#version 430 core

uniform float	factor;

layout (binding = 0, rgba16f) uniform image2D colorBuffer;

// we use 16 * 16 threads groups
layout (local_size_x = 16, local_size_y = 16) in;

void	main()
{
	ivec2		position = ivec2(gl_GlobalInvocationID.xy);
	ivec2		colorBufferSize = imageSize(colorBuffer);

	if (position.x < colorBufferSize.x &&
		position.y < colorBufferSize.y)
	{
		vec3	pxlColor = imageLoad(colorBuffer, position).rgb;

		imageStore(colorBuffer, position, vec4(factor * pxlColor, 1.0f));
	}
}